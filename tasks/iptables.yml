---
- name: Install iptables
  package:
    name: "{{ firewall_iptables_package }}"
    state: present

- name: Check if iptables path is correct
  ansible.builtin.command: "{{ firewall_iptables_path }} --version"
  register: iptables_help
  ignore_errors: true
  changed_when: iptables_help.rc != 0

- name: Get iptables path
  ansible.builtin.command: "which iptables"
  register: iptables_location
  when: iptables_help is defined and iptables_help.rc != 0

- name: Set found iptables path
  set_fact:
    firewall_iptables_path: "{{ iptables_location.stdout }}"
  when: iptables_help is defined and iptables_location.stdout is defined

- name: Create iptables service file
  template:
    src: "{{ item }}"
    dest: "{{ systemd_unit_directory }}/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - iptables.service.j2
    - ip6tables.service.j2
  notify:
    - reload systemd
  when:
    - firewall_iptables_create_service
    - ansible_distribution != "Ubuntu" and ansible_distribution != "Debian"

- name: Generate iptables file
  template:
    src: "iptables-persistent.j2"
    dest: "{{ firewall_iptables_directory }}/{{ firewall_iptables_file_name }}"
  notify:
    # Ipsets must be started before iptables can be tested..
    - restart and enable ipset
    - test iptables
    - restart and enable iptables

- name: Generate ip6tables file
  template:
    src: "ip6tables-persistent.j2"
    dest: "{{ firewall_iptables_directory }}/{{ firewall_ip6tables_file_name }}"
  notify:
    # Ipsets must be started before iptables can be tested..
    - restart and enable ipset
    - test ip6tables
    - restart and enable ip6tables
