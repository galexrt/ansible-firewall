---
- name: Install iptables (rhel)
  action: "{{ ansible_pkg_mgr }}"
  args:
    name: "{{ item }}"
    state: latest
  with_items:
    - iptables-services
  when: ansible_distribution != "Debian" and ansible_distribution != "Ubuntu"

- name: Install iptables (deb)
  action: "{{ ansible_pkg_mgr }}"
  args:
    name: "{{ item }}"
    state: latest
  with_items:
    - iptables-persistent
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: Check if iptables path is correct
  command: "{{ firewall_iptables_path }} --version"
  register: iptables_help
  ignore_errors: yes
  changed_when: iptables_help.rc != 0

- name: Get iptables path
  command: which iptables
  register: iptables_location
  when: iptables_help is defined and iptables_help.rc != 0

- name: Set found iptables path
  set_fact:
    firewall_iptables_path: "{{ iptables_location.stdout }}"
  when: iptables_help is defined and iptables_location.stdout is defined

- name: Create iptables service file
  copy:
    src: "{{ item }}"
    dest: "{{ systemd_unit_directory }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - iptables.service
    - ip6tables.service
  notify:
    - reload systemd

- name: Generate iptables file
  template:
    src: "iptables-persistent.j2"
    dest: "{{ conf_file_location }}/iptables"
  notify:
    - check iptables
    - start and enable ipset
    - restart and enable iptables
    - restart and enable iptables-persistent

- name: Generate ip6tables file
  template:
    src: "ip6tables-persistent.j2"
    dest: "/etc/sysconfig/ip6tables"
  notify:
    - check ip6tables
    - start and enable ipset
    - restart and enable ip6tables
    - restart and enable ip6tables-persistent
