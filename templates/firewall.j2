#!/bin/bash

IPTABLES="{{ firewall_iptables_path }}"

{% for chain in firewall_filter_rules %}
{% if chain.name not in firewall_default_chains %}
# Chain: {{ chain.name }} (Default policy: {% if chain.default_policy is defined %}{{ chain.default_policy }}{% else %}{{ firewall_chain_default_policy }}{% endif %})
$IPTABLES -t {% if chain.table is defined %}{{ chain.table }}{% else %}filter{% endif %} -N {{ chain.name }}
{% endif %}
{% for rule in chain.rules %}
{% if rule.custom is not defined %}
## {{ rule.name }}
$IPTABLES{% if rule.table is defined and rule.table != "filter" %} -t {{ rule.table }}{% endif %} -A {{ chain.name }} {% if rule.iniface is defined %}-i {{ rule.iniface }} {% endif %}
{% if rule.outiface is defined %}-o {{ rule.outiface }} {% endif %}
{% if rule.proto is defined and rule.proto != "all" %}-p {{ rule.proto }} {% endif %}
{% if rule.icmp is defined %}--icmp-type {{ rule.icmp }} {% endif %}
{% if rule.dport is defined %}--dport {{ rule.dport }} {% endif %}
{% if rule.dports is defined %}-m multiport --dports {% for port in rule.dports %}{{ port }}{% if not loop.last %},{% endif %}{% endfor %} {% endif %}
{% if rule.sport is defined %}--sport {{ rule.sport }} {% endif %}
{% if rule.sports is defined %}-m multiport --sports {{ rule.sports }} {% endif %}
{% if rule.to_destination is defined %}--to-destination {{ rule.to_destination }} {% endif %}
{% if rule.source is defined %}-s {{ rule.source }} {% endif %}
{% if rule.src_range is defined %}--src-range {{ rule.src_range }} {% endif %}
{% if rule.src_type is defined %}--src-type {{ rule.src_type }} {% endif %}
{% if rule.dst_range is defined %}--dst-range {{ rule.dst_range }} {% endif %}
{% if rule.dst_type is defined %}--dst-type {{ rule.dst_type }} {% endif %}
{% if rule.set is defined %}-m set --set {{ rule.set }} {{ rule.set_mode|default('src') }} {% endif %}
{% if rule.connmark is defined and rule.connmark.id is defined %}-m mark {% if rule.connmark.negative is defined and rule.connmark.negative %}! {% endif %}--mark {{ rule.connmark.id }} {% endif %}
{% if rule.proto is defined and rule.proto == "tcp" %}{% if rule.tcp_flags is defined %}--tcp-flags {% for flag in rule.tcp_flags %}{{ flag }}{% if not loop.last %} {% endif %}{% endfor %} {% endif %}{% endif %}
{% if rule.ctstate is defined %}-m conntrack --ctstate {% for state in rule.ctstate %}{{ state }}{% if not loop.last %},{% endif %}{% endfor %} {% endif %}
{% if rule.state is defined %}-m state --state {% for state in rule.state %}{{ state }}{% if not loop.last %},{% endif %}{% endfor %} {% endif %}
{% if rule.dst_type is defined %}-m limit --limit {{ rule.limit }} {% endif %}
-j {{ rule.jump }}{% if rule.reject_with is defined %} -m state --reject-with {{ rule.reject_with|trim }}{% endif %}{% if rule.log_prefix is defined %} --log-prefix "{{ rule.log_prefix }} " {% endif %}{% if rule.log_level is defined %} --log-level {{ rule.log_level }}{% endif %}
{% else %}
{{ rule.custom }}
{% endif %}
{% endfor %}
# Chain default policy
$IPTABLES{% if chain.table is defined and chain.table != "filter" %} -t {{ chain.table }}{% endif %} -P {{ chain.name }} {% if chain.default_policy is defined %}{{ chain.default_policy }}{% else %}{{ firewall_chain_default_policy }}{% endif %}

{% endfor %}
